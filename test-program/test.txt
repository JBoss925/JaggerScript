{
  token: 'P',
  classes: [
    <ref *1> {
      token: 'C',
      name: 'BreakTest',
      scope: Map(0) {},
      globalVars: [ [length]: 0 ],
      functions: [
        {
          token: 'F',
          parent: [Circular *1],
          name: 'main',
          scopes: Map(0) {},
          args: undefined,
          within: [
            {
              token: 'FC',
              functionName: 'test',
              args: undefined,
              scope: undefined
            },
            { token: 'RT', value: undefined },
            [length]: 2
          ]
        },
        {
          token: 'F',
          parent: [Circular *1],
          name: 'test',
          scopes: Map(0) {},
          args: undefined,
          within: [
            {
              token: 'D',
              type: 'number',
              identifier: 'i',
              equals: {
                token: 'V',
                type: 'number',
                value: 0,
                typeStr: 'number',
                numLiveReferences: 0
              }
            },
            {
              token: 'D',
              type: 'number',
              identifier: 'z',
              equals: {
                token: 'V',
                type: 'number',
                value: 0,
                typeStr: 'number',
                numLiveReferences: 0
              }
            },
            {
              token: 'D',
              type: 'number',
              identifier: 'x',
              equals: {
                token: 'V',
                type: 'number',
                value: 0,
                typeStr: 'number',
                numLiveReferences: 0
              }
            },
            {
              token: 'D',
              type: 'number',
              identifier: 'y',
              equals: {
                token: 'V',
                type: 'number',
                value: 0,
                typeStr: 'number',
                numLiveReferences: 0
              }
            },
            {
              token: 'W',
              expression: {
                token: 'BE',
                operator: '<',
                left: {
                  token: 'VA',
                  scope: undefined,
                  variableName: 'i',
                  type: 'unknown',
                  typeStr: 'unknown'
                },
                right: {
                  token: 'V',
                  type: 'number',
                  value: 1000,
                  typeStr: 'number',
                  numLiveReferences: 0
                }
              },
              within: [
                {
                  token: 'W',
                  expression: {
                    token: 'BE',
                    operator: '<',
                    left: {
                      token: 'VA',
                      scope: undefined,
                      variableName: 'z',
                      type: 'unknown',
                      typeStr: 'unknown'
                    },
                    right: {
                      token: 'V',
                      type: 'number',
                      value: 1000,
                      typeStr: 'number',
                      numLiveReferences: 0
                    }
                  },
                  within: [
                    {
                      token: 'R',
                      variable: {
                        token: 'VA',
                        scope: undefined,
                        variableName: 'x',
                        type: 'unknown',
                        typeStr: 'unknown'
                      },
                      equals: {
                        token: 'AE',
                        left: {
                          token: 'VA',
                          scope: undefined,
                          variableName: 'x',
                          type: 'unknown',
                          typeStr: 'unknown'
                        },
                        right: [
                          {
                            token: 'AO',
                            operation: '+',
                            value: {
                              token: 'V',
                              type: 'number',
                              value: 1,
                              typeStr: 'number',
                              numLiveReferences: 0
                            }
                          },
                          [length]: 1
                        ]
                      }
                    },
                    {
                      token: 'R',
                      variable: {
                        token: 'VA',
                        scope: undefined,
                        variableName: 'z',
                        type: 'unknown',
                        typeStr: 'unknown'
                      },
                      equals: {
                        token: 'AE',
                        left: {
                          token: 'VA',
                          scope: undefined,
                          variableName: 'z',
                          type: 'unknown',
                          typeStr: 'unknown'
                        },
                        right: [
                          {
                            token: 'AO',
                            operation: '+',
                            value: {
                              token: 'V',
                              type: 'number',
                              value: 1,
                              typeStr: 'number',
                              numLiveReferences: 0
                            }
                          },
                          [length]: 1
                        ]
                      }
                    },
                    { token: 'B' },
                    [length]: 3
                  ]
                },
                {
                  token: 'R',
                  variable: {
                    token: 'VA',
                    scope: undefined,
                    variableName: 'y',
                    type: 'unknown',
                    typeStr: 'unknown'
                  },
                  equals: {
                    token: 'AE',
                    left: {
                      token: 'VA',
                      scope: undefined,
                      variableName: 'y',
                      type: 'unknown',
                      typeStr: 'unknown'
                    },
                    right: [
                      {
                        token: 'AO',
                        operation: '+',
                        value: {
                          token: 'V',
                          type: 'number',
                          value: 1,
                          typeStr: 'number',
                          numLiveReferences: 0
                        }
                      },
                      [length]: 1
                    ]
                  }
                },
                {
                  token: 'R',
                  variable: {
                    token: 'VA',
                    scope: undefined,
                    variableName: 'i',
                    type: 'unknown',
                    typeStr: 'unknown'
                  },
                  equals: {
                    token: 'AE',
                    left: {
                      token: 'VA',
                      scope: undefined,
                      variableName: 'i',
                      type: 'unknown',
                      typeStr: 'unknown'
                    },
                    right: [
                      {
                        token: 'AO',
                        operation: '+',
                        value: {
                          token: 'V',
                          type: 'number',
                          value: 1,
                          typeStr: 'number',
                          numLiveReferences: 0
                        }
                      },
                      [length]: 1
                    ]
                  }
                },
                { token: 'B' },
                [length]: 4
              ]
            },
            {
              token: 'FC',
              functionName: 'log',
              args: {
                token: 'AI',
                args: [
                  {
                    token: 'VA',
                    scope: undefined,
                    variableName: 'i',
                    type: 'unknown',
                    typeStr: 'unknown'
                  },
                  [length]: 1
                ]
              },
              scope: { token: 'S', scope: [ 'console', [length]: 1 ] }
            },
            {
              token: 'FC',
              functionName: 'log',
              args: {
                token: 'AI',
                args: [
                  {
                    token: 'VA',
                    scope: undefined,
                    variableName: 'z',
                    type: 'unknown',
                    typeStr: 'unknown'
                  },
                  [length]: 1
                ]
              },
              scope: { token: 'S', scope: [ 'console', [length]: 1 ] }
            },
            {
              token: 'FC',
              functionName: 'log',
              args: {
                token: 'AI',
                args: [
                  {
                    token: 'VA',
                    scope: undefined,
                    variableName: 'x',
                    type: 'unknown',
                    typeStr: 'unknown'
                  },
                  [length]: 1
                ]
              },
              scope: { token: 'S', scope: [ 'console', [length]: 1 ] }
            },
            {
              token: 'FC',
              functionName: 'log',
              args: {
                token: 'AI',
                args: [
                  {
                    token: 'VA',
                    scope: undefined,
                    variableName: 'y',
                    type: 'unknown',
                    typeStr: 'unknown'
                  },
                  [length]: 1
                ]
              },
              scope: { token: 'S', scope: [ 'console', [length]: 1 ] }
            },
            { token: 'RT', value: undefined },
            [length]: 10
          ]
        },
        [length]: 2
      ],
      construct: {
        token: 'CO',
        parent: [Circular *1],
        args: undefined,
        within: [
          {
            token: 'COM',
            comment: 'This is a program that tests loop breaks.'
          },
          {
            token: 'COM',
            comment: "When working, this should log '1' four times"
          },
          { token: 'COM', comment: 'in the console.' },
          [length]: 3
        ]
      }
    },
    [length]: 1
  ]
}